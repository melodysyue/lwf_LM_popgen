library(bigsnpr)
#########################################
###Conduct LD thinning on neutral SNPs###
#########################################

rm(list=ls())

plink <- "./scripts/1_neutral_vs_outlier/plink2.exe"
bedfile <- './data/neutral_outlier/lwf.ol.bed'
popmap <- read.table("./data/meta/lwf.N829.popmap.edited",header=F)
colnames(popmap) <- c("sample", "pop")


###check the data
(obj.bed <- bed(bedfile))

###Get the input ready
# Read from bed/bim/fam, it will create new files.
snp_readBed(bedfile) #only need to do this once
#this creates two new output: X.rds and X.bk
# Attach the "bigSNP" object in R session
obj.bigSNP <- snp_attach("./data/neutral_outlier/lwf.ol.rds") 
#load the "bigSNP" object


# See how it looks like
str(obj.bigSNP, max.level = 2, strict.width = "cut")

###Get aliases for useful slots
G <- obj.bigSNP$genotypes
CHR <- obj.bigSNP$map$chromosome
POS <- obj.bigSNP$map$physical.pos
# Check and make sure there is no missing data
big_counts(G, ind.col = 1:10)

G2 <- snp_fastImputeSimple(G) #impute missing data
big_counts(G2, ind.col = 1:10)


svd <- snp_autoSVD(G2, CHR, POS, 
                   min.mac=3,
                   max.iter=10,
                   ncores=nb_cores(),
                   roll.size=0) #set roll.size=0 otherwise it will say it is too big. so annoying!


###Output a list of SNPs after removing outliers
table(obj.bigSNP$fam$sample.ID == popmap$sample) #make sure order is the same

subset=attr(svd, "subset")

thinned <- obj.bigSNP$map %>% 
  rownames_to_column("index") %>% 
  filter(index %in% subset) %>% 
  pull(marker.ID)

length(thinned)

attr(svd, "lrldr")

write.table(thinned, "./data/neutral_outlier/lwf.ol_thinned.snps", quote=F, row.names = F)


#what got thinned for ol SNPs

ol <- read.table("./data/neutral_outlier/lwf.ol.snps", header=T)
ol.thinned <- read.table("./data/neutral_outlier/lwf.ol_thinned.snps", header=T)
snps <- read.table("./data/plink/lwf.pop.bim", header=F)
snps <- snps %>% 
  select(chr=V1, pos=V4, snp=V2)

snps %>% 
  filter(snp %in% ol$x & !snp %in% ol.thinned$x) %>% 
  group_by(chr) %>% 
  summarize(n=n()) %>% 
  arrange(desc(n)) %>% 
  view()

snps %>% 
  filter(snp %in% ol$x & !snp %in% ol.thinned$x) %>% 
  filter(chr==20) %>% 
  view()

snps %>% 
  filter(snp %in% ol.thinned$x) %>% 
  group_by(chr) %>% 
  summarize(n=n()) %>%
  view()

snps %>% 
  filter(snp %in% ol.thinned$x) %>% 
  filter(chr==20) %>% 
  view()

plot_annotation(tag_levels = "A")
pop.env <- read.table("./data/env/19bioclim_pop.txt", header=T)
View(pop.env)
pca.r <- prcomp(pop.env, scale=TRUE, center=TRUE)
str(pca.r)
#variance explained
ev <- pca.r$sdev^2
ev[1] / sum(ev)
ev[2] / sum(ev)
ev[3] / sum(ev)
package_version(raster)
library(raster)
package_version(raster)
package_version("raster")
library(raster)
?version
?packageVersion
packageVersion("raster")
packageVersion("vegan")
library(tidyverse)
library(raster)
library(factoextra)
library(patchwork)
library(gridExtra)
library(cowplot)
rm(list=ls())
pop.env <- read.table("./data/env/19bioclim_pop.txt", header=T)
pca.r <- prcomp(pop.env, scale=TRUE, center=TRUE)
str(pca.r)
#variance explained
ev <- pca.r$sdev^2
ev[1] / sum(ev)
ev[2] / sum(ev)
p_pca <- fviz_pca_biplot(pca.r,  #This reference line corresponds to the expected value if the contribution where uniform.
axes=c(1,2),
col.ind = "dodgerblue",# Individuals color
col.var = "dimgray", # Variables color
pointsize=4,
repel=TRUE,
labelsize=6)+
labs(title="", x=paste0("PC1 (", round((ev[1] / sum(ev)), 3)*100, "%)"), y=paste0("PC2 (", round((ev[2] / sum(ev)), 3)*100, "%)"))+
theme_bw(base_size = 15)
#see how many PCs to retain
#Kaiser-Guttman criterion and broken stick;
# Broken stick model (MacArthur 1957)
n = length(ev)
bsm = data.frame(j=seq(1:n), p=0)
bsm$p[1] = 1/n
for (i in 2:n) bsm$p[i] = bsm$p[i-1] + (1/(n + 1 - i))
bsm$p = 100*bsm$p/n
# Plot eigenvalues and % of variation for each axis
pdf(NULL)
dev.control(displaylist="enable")
op = par(mfrow=c(2,1),omi=c(0.1,0.3,0.1,0.1), mar=c(1, 1, 1, 1))
barplot(ev, main="Kaiser-Guttmann criterion", col="bisque", las=2)
abline(h=mean(ev), col="red")
legend("topright", "Average eigenvalue", lwd=1, col=2, bty="n")
barplot(t(cbind(100*ev/sum(ev), bsm$p[n:1])), beside=TRUE,
main="Broken stick model", col=c("bisque",2), las=2)
legend("topright", c("% eigenvalue", "Broken stick model"),
pch=15, col=c("bisque",2), bty="n")
par(op)
p_criteria <- recordPlot()
invisible(dev.off())
p_criteria
p_criteria <- as_grob(p_criteria)
#contribution to each significant PC
p_pc1 <- fviz_contrib(pca.r, choice = "var",axes=1)+coord_flip()+
labs(title = "Contribution to PC1", x="")+
theme_bw(base_size=15)
p_pc2 <- fviz_contrib(pca.r, choice = "var",axes=2)+coord_flip()+
labs(title = "Contribution to PC2", x="")+
theme_bw(base_size=15)
#plot
pdf("./figures/figS6_envPC.pdf", width = 12, height = 18)
p_pca / wrap_elements(p_criteria) / (p_pc1 + p_pc2) +
plot_layout(heights = c(2,2,3))+
plot_annotation(tag_levels = "A")
dev.off()
#extract environmental PCs
pca.r$x[,1:3]
write.table(pca.r$x[,1:3], "./data/env/lwf_env_PC12_pop.txt", quote=F, row.names = T)
#extract environmental PCs
pca.r$x[,1:2]
write.table(pca.r$x[,1:2], "./data/env/lwf_env_PC12_pop.txt", quote=F, row.names = T)
pop.env <- read.table("./data/env/19bioclim_pop.txt", header=T)
pca.r <- prcomp(pop.env, scale=TRUE, center=TRUE)
str(pca.r)
#variance explained
ev <- pca.r$sdev^2
ev[1] / sum(ev)
ev[2] / sum(ev)
p_pca <- fviz_pca_biplot(pca.r,  #This reference line corresponds to the expected value if the contribution where uniform.
axes=c(1,2),
col.ind = "dodgerblue",# Individuals color
col.var = "dimgray", # Variables color
pointsize=4,
repel=TRUE,
labelsize=6)+
labs(title="", x=paste0("PC1 (", round((ev[1] / sum(ev)), 3)*100, "%)"), y=paste0("PC2 (", round((ev[2] / sum(ev)), 3)*100, "%)"))+
theme_bw(base_size = 15)
#see how many PCs to retain
#Kaiser-Guttman criterion and broken stick;
# Broken stick model (MacArthur 1957)
n = length(ev)
bsm = data.frame(j=seq(1:n), p=0)
bsm$p[1] = 1/n
for (i in 2:n) bsm$p[i] = bsm$p[i-1] + (1/(n + 1 - i))
bsm$p = 100*bsm$p/n
# Plot eigenvalues and % of variation for each axis
pdf(NULL)
dev.control(displaylist="enable")
op = par(mfrow=c(2,1),omi=c(0.1,0.3,0.1,0.1), mar=c(1, 1, 1, 1))
barplot(ev, main="Kaiser-Guttman criterion", col="bisque", las=2)
abline(h=mean(ev), col="red")
legend("topright", "Average eigenvalue", lwd=1, col=2, bty="n")
barplot(t(cbind(100*ev/sum(ev), bsm$p[n:1])), beside=TRUE,
main="Broken stick model", col=c("bisque",2), las=2)
legend("topright", c("% eigenvalue", "Broken stick model"),
pch=15, col=c("bisque",2), bty="n")
par(op)
p_criteria <- recordPlot()
invisible(dev.off())
p_criteria
p_criteria <- as_grob(p_criteria)
#contribution to each significant PC
p_pc1 <- fviz_contrib(pca.r, choice = "var",axes=1)+coord_flip()+
labs(title = "Contribution to PC1", x="")+
theme_bw(base_size=15)
p_pc2 <- fviz_contrib(pca.r, choice = "var",axes=2)+coord_flip()+
labs(title = "Contribution to PC2", x="")+
theme_bw(base_size=15)
#plot
pdf("./figures/figS6_envPC.pdf", width = 12, height = 18)
p_pca / wrap_elements(p_criteria) / (p_pc1 + p_pc2) +
plot_layout(heights = c(2,2,3))+
plot_annotation(tag_levels = "A")
dev.off()
#extract environmental PCs
pca.r$x[,1:2]
write.table(pca.r$x[,1:2], "./data/env/lwf_env_PC12_pop.txt", quote=F, row.names = T)
library(vegan)
library(tidyverse)
library(reshape2)
library(car)
library(scales)
library(usedist)
library(patchwork)
library(ggpubr)
rm(list=ls())
##Load the data
wdist <- read.table("./data/meta/lwf_waterDist.txt", header=T)
pwfst<- read.table("./data/fst/pwfst.txt", header=T)
###mantel test###
# Prepare a data for the Mantel Test
# mantel function unfortunately only accepts a matrix as input
wdist.d <- as.dist(wdist)
pwfst.d <- pwfst %>%
mutate(linearized_fst = (fst/(1-fst))) %>%
dplyr::select(var1,var2, linearized_fst) %>%
spread(var2, linearized_fst) %>%
column_to_rownames("var1") %>%
as.matrix()
#make sure two matrixes have the same order
pwfst.d <- pwfst.d[labels(wdist.d), labels(wdist.d)]
pwfst.d <- as.dist(pwfst.d)
labels(wdist.d)
labels(pwfst.d)
table(labels(wdist.d)==labels(pwfst.d))
#mantel test
set.seed(29)
mantel(wdist.d, pwfst.d, method="pearson", permutations=10000)
#summary(lm(pwfst.d ~ wdist.d))
###plotting###
#put tow datasets together
d1 <- melt(as.matrix(wdist.d), varnames=c("row","col")) %>%
rename(water.dist=value)
d2 <- melt(as.matrix(pwfst.d), varnames=c("row","col")) %>%
rename(linearfst=value)
dd <- left_join(d1,d2,by=c("row", "col"))
west <- c("FOXR", "RILY","LSRF","PSTG", "WTFB", "MENO","NMNL","BBDN","MNST")
east <- c("NAUB","EPFT", "CXVL", "LTTV","IGPT","GOOD","EKRP","MSKG")
dd <- dd %>%
mutate(type=case_when(
row %in% west & col %in% west ~ "Among northwestern populations",
row %in% east & col %in% east ~ "Among eastern populations",
TRUE ~ "Between northwestern and easter populations"
))
dd$type <- factor(dd$type, levels=c("Among northwestern populations", "Between northwestern and eastern populations", "Among eastern populations"))
dd <- dd %>%
mutate(pair=paste0(row,"_",col)) %>%
filter(row!=col) %>% #remove self pairs
column_to_rownames("pair") %>%
dplyr::select(-row, -col) %>%
unique()  #remove duplicate pairs;
#mantel test by basin
table(labels(wdist.d)==labels(pwfst.d))
#west basin
w.wdist <- dist_subset(wdist.d, west)
w.pwfst <- dist_subset(pwfst.d, west)
table(labels(w.wdist)==labels(w.pwfst))
mantel(w.wdist, w.pwfst, method="pearson", permutations=10000)
#east basin
e.wdist <- dist_subset(wdist.d, east)
e.pwfst <- dist_subset(pwfst.d, east)
table(labels(e.wdist)==labels(e.pwfst))
mantel(e.wdist, e.pwfst, method="pearson", permutations=10000)
#mantle test without MSKG
noMSKG <- c("FOXR", "RILY","LSRF","PSTG", "WTFB", "MENO","NMNL","BBDN","MNST",
"NAUB","EPFT", "CXVL", "LTTV","IGPT","GOOD","EKRP")
noMSKG.wdist <- dist_subset(wdist.d, noMSKG)
noMSKG.pwfst <- dist_subset(pwfst.d, noMSKG)
table(labels(noMSKG.wdist)==labels(noMSKG.pwfst))
mantel(noMSKG.wdist, noMSKG.pwfst, method="pearson", permutations=10000)
#overall IBD
p1 <- dd %>%
ggplot(aes(x=water.dist, y=linearfst)) + #specify dataframe
geom_point() +
scale_x_continuous(labels=comma)+
geom_smooth(method="lm", se=FALSE, color="red")+
ylab(expression(italic(F[ST]/(1-F[ST])))) +
xlab("In-Water Distance \n (calculated as least-cost path distance)")  +
ggtitle("All Populations")+
annotate("text",
label=c("paste(italic(r), \" = 0.468\")",
"paste(italic(p), \" = 0.005\")"),
parse=TRUE,
x=c(-Inf,-Inf), y=c(0.0123,0.0115), size=8, hjust=-0.5, color="red") +
theme_bw(base_size = 20)
#IBD by basin
p2 <- dd %>%
ggplot(aes(x=water.dist, y=linearfst, col=type)) + #specify dataframe
geom_point() +
scale_color_manual(values=c("steelblue", "seagreen", "orange"))+
scale_x_continuous(labels=comma)+
geom_smooth(method="lm", se=FALSE)+
labs(col="Comparison")+
ggtitle("By Lake Region (MSKG included)")+
theme_bw(base_size = 20)+
theme(axis.title = element_blank(),
legend.position = "bottom")+
guides(color=guide_legend(ncol=1))
#IBD without MSKG
p3 <- dd %>%
rownames_to_column("pair") %>%
filter(!str_detect(pair, "MSKG")) %>%
ggplot(aes(x=water.dist, y=linearfst, col=type)) +
geom_point() +
scale_color_manual(values=c("steelblue", "seagreen", "orange"))+
scale_x_continuous(labels=comma)+
geom_smooth(method="lm", se=FALSE)+
labs(col="Comparison")+
ggtitle("By Lake Region (MSKG removed)")+
theme_bw(base_size = 20)+
theme(axis.title = element_blank(),
legend.position = "bottom")+
guides(color=guide_legend(ncol=1))
pdf("./figures/fig2_lwf_ibd.pdf", width = 16, height = 12)
(p1 | (p2 / p3 / guide_area() + plot_layout(heights = c(4,4,1), guides='collect'))) +
plot_annotation(tag_levels = "A")
dev.off()
library(vegan)
library(tidyverse)
library(reshape2)
library(car)
library(scales)
library(usedist)
library(patchwork)
library(ggpubr)
rm(list=ls())
##Load the data
wdist <- read.table("./data/meta/lwf_waterDist.txt", header=T)
pwfst<- read.table("./data/fst/pwfst.txt", header=T)
###mantel test###
# Prepare a data for the Mantel Test
# mantel function unfortunately only accepts a matrix as input
wdist.d <- as.dist(wdist)
pwfst.d <- pwfst %>%
mutate(linearized_fst = (fst/(1-fst))) %>%
dplyr::select(var1,var2, linearized_fst) %>%
spread(var2, linearized_fst) %>%
column_to_rownames("var1") %>%
as.matrix()
#make sure two matrixes have the same order
pwfst.d <- pwfst.d[labels(wdist.d), labels(wdist.d)]
pwfst.d <- as.dist(pwfst.d)
labels(wdist.d)
labels(pwfst.d)
table(labels(wdist.d)==labels(pwfst.d))
#mantel test
set.seed(29)
mantel(wdist.d, pwfst.d, method="pearson", permutations=10000)
#summary(lm(pwfst.d ~ wdist.d))
###plotting###
#put tow datasets together
d1 <- melt(as.matrix(wdist.d), varnames=c("row","col")) %>%
rename(water.dist=value)
d2 <- melt(as.matrix(pwfst.d), varnames=c("row","col")) %>%
rename(linearfst=value)
dd <- left_join(d1,d2,by=c("row", "col"))
west <- c("FOXR", "RILY","LSRF","PSTG", "WTFB", "MENO","NMNL","BBDN","MNST")
east <- c("NAUB","EPFT", "CXVL", "LTTV","IGPT","GOOD","EKRP","MSKG")
dd <- dd %>%
mutate(type=case_when(
row %in% west & col %in% west ~ "Among northwestern populations",
row %in% east & col %in% east ~ "Among eastern populations",
TRUE ~ "Between northwestern and eastern populations"
))
dd$type <- factor(dd$type, levels=c("Among northwestern populations", "Between northwestern and eastern populations", "Among eastern populations"))
dd <- dd %>%
mutate(pair=paste0(row,"_",col)) %>%
filter(row!=col) %>% #remove self pairs
column_to_rownames("pair") %>%
dplyr::select(-row, -col) %>%
unique()  #remove duplicate pairs;
#mantel test by basin
table(labels(wdist.d)==labels(pwfst.d))
#west basin
w.wdist <- dist_subset(wdist.d, west)
w.pwfst <- dist_subset(pwfst.d, west)
table(labels(w.wdist)==labels(w.pwfst))
mantel(w.wdist, w.pwfst, method="pearson", permutations=10000)
#east basin
e.wdist <- dist_subset(wdist.d, east)
e.pwfst <- dist_subset(pwfst.d, east)
table(labels(e.wdist)==labels(e.pwfst))
mantel(e.wdist, e.pwfst, method="pearson", permutations=10000)
#mantle test without MSKG
noMSKG <- c("FOXR", "RILY","LSRF","PSTG", "WTFB", "MENO","NMNL","BBDN","MNST",
"NAUB","EPFT", "CXVL", "LTTV","IGPT","GOOD","EKRP")
noMSKG.wdist <- dist_subset(wdist.d, noMSKG)
noMSKG.pwfst <- dist_subset(pwfst.d, noMSKG)
table(labels(noMSKG.wdist)==labels(noMSKG.pwfst))
mantel(noMSKG.wdist, noMSKG.pwfst, method="pearson", permutations=10000)
#overall IBD
p1 <- dd %>%
ggplot(aes(x=water.dist, y=linearfst)) + #specify dataframe
geom_point() +
scale_x_continuous(labels=comma)+
geom_smooth(method="lm", se=FALSE, color="red")+
ylab(expression(italic(F[ST]/(1-F[ST])))) +
xlab("In-Water Distance \n (calculated as least-cost path distance)")  +
ggtitle("All Populations")+
annotate("text",
label=c("paste(italic(r), \" = 0.468\")",
"paste(italic(p), \" = 0.005\")"),
parse=TRUE,
x=c(-Inf,-Inf), y=c(0.0123,0.0115), size=8, hjust=-0.5, color="red") +
theme_bw(base_size = 20)
#IBD by basin
p2 <- dd %>%
ggplot(aes(x=water.dist, y=linearfst, col=type)) + #specify dataframe
geom_point() +
scale_color_manual(values=c("steelblue", "seagreen", "orange"))+
scale_x_continuous(labels=comma)+
geom_smooth(method="lm", se=FALSE)+
labs(col="Comparison")+
ggtitle("By Lake Region (MSKG included)")+
theme_bw(base_size = 20)+
theme(axis.title = element_blank(),
legend.position = "bottom")+
guides(color=guide_legend(ncol=1))
#IBD without MSKG
p3 <- dd %>%
rownames_to_column("pair") %>%
filter(!str_detect(pair, "MSKG")) %>%
ggplot(aes(x=water.dist, y=linearfst, col=type)) +
geom_point() +
scale_color_manual(values=c("steelblue", "seagreen", "orange"))+
scale_x_continuous(labels=comma)+
geom_smooth(method="lm", se=FALSE)+
labs(col="Comparison")+
ggtitle("By Lake Region (MSKG removed)")+
theme_bw(base_size = 20)+
theme(axis.title = element_blank(),
legend.position = "bottom")+
guides(color=guide_legend(ncol=1))
pdf("./figures/fig2_lwf_ibd.pdf", width = 16, height = 12)
(p1 | (p2 / p3 / guide_area() + plot_layout(heights = c(4,4,1), guides='collect'))) +
plot_annotation(tag_levels = "A")
dev.off()
library(tidyverse)
rm(list=ls())
###full dateset
full <- read.table("./data/fst/pwfst.txt", header=T)
#value range by basin
west <- c("FOXR", "RILY","LSRF", "PSTG","MENO", "WTFB","NMNL", "BBDN","MNST")
east <- c("NAUB", "EPFT", "CXVL", "LTTV", "EKRP", "GOOD", "IGPT", "MSKG")
full %>%
filter( var1 %in% west & var2 %in% west) %>%
filter(var1 != var2) %>%
summary()
rm(list=ls())
###pop order
west <- c("FOXR", "RILY","LSRF", "PSTG","MENO", "WTFB","NMNL", "BBDN","MNST")
east <- c("NAUB", "EPFT", "CXVL", "LTTV", "EKRP", "GOOD", "IGPT", "MSKG")
order <- c( "FOXR", "RILY","LSRF", "PSTG","MENO", "WTFB","NMNL", "BBDN","MNST",
"NAUB", "EPFT", "CXVL", "LTTV", "EKRP", "GOOD", "IGPT", "MSKG")
###full dateset
full <- read.table("./data/fst/pwfst.txt", header=T)
full$var1 <- factor(full$var1, levels=order)
full$var2 <- factor(full$var2, levels=order)
text.col <- c(rep("steelblue", length(west)), rep("orange", length(east)))
list <- list.files(path="./data/islands/", pattern="*_ol_pwfst.txt", full.names=TRUE, recursive = TRUE) %>%
sort()
chrs <- str_remove_all(list, "./data/islands/") %>%
sort()
chrs <- str_remove_all(chrs, "_ol_pwfst.txt")
out <- list %>%
map_df(read.table, header=T)
out$chr <- rep(chrs, each=nrow(out)/6)
summary(out) #use scale (0, 0.5)
out$pop1 <- factor(out$pop1, levels=order)
out$pop2 <- factor(out$pop2, levels=order)
out$chr <- as.factor(out$chr)
out$chr <- factor(out$chr,
levels=c("chr4", "chr7", "chr10", "chr11", "chr18", "chr20"),
labels=c("Chromosome 4", "Chromosome 7", "Chromosome 10", "Chromosome 11", "Chromosome 18", "Chromosome 20"))
head(full)
head(out)
full$pairs <- paste0(var1, "_", var2)
full$pairs <- paste0(full$var1, "_", full$var2)
head(full)
out$pairs <- paste0(out$pop1, "_", out$pop2)
table(unique(full$pairs)==unique(out$pairs))
(unique(full$pairs)
)
unique(out$pairs)
full <- full %>%
filter(var1 != var2)
full$pairs <- paste0(full$var1, "_", full$var2)
out$pairs <- paste0(out$pop1, "_", out$pop2)
table(unique(full$pairs)==unique(out$pairs))
head(full)
full_pwfst <- full %>%
select(pairs, pwfst=fst) %>%
mutate(source="full")
head(full_pwfst)
head(out)
island_pwfst <- out %>%
select(pairs, pwfst, source=chr)
head(full_pwfst)
head(island_pwfst)
both <- rbind(full_pwfst, island_pwfst)
both %>%
ggplot(aes(x=pairs, y=pwfst, col=source)) %>%
geom_line()
both %>%
ggplot(aes(x=pairs, y=pwfst, col=source)) +
geom_line()
View(both)
both %>%
filter(source=="full") %>%
ggplot(aes(x=pairs, y=pwfst)) +
geom_line()
str(both)
both %>%
filter(source=="full") %>%
ggplot(aes(x=pairs, y=pwfst, group=1)) +
geom_line()
both %>%
ggplot(aes(x=pairs, y=pwfst, group=1, col=source)) +
geom_line()
full_pwfst <- full %>%
select(pairs, full=fst)
island_pwfst <- out %>%
select(pairs, islands=pwfst, chr)
head(full_pwfst)
head(island_pwfst)
both <- left_join(island_pwfst, full_pwfst, by="pairs")
View(both)
both %>%
ggplot(aes(x=full, y=islands, col=chr)) +
geom_point() %>%
facet_wrap(~chr)
both %>%
ggplot(aes(x=full, y=islands, col=chr)) +
geom_point() +
facet_wrap(~chr)
both %>%
ggplot(aes(x=full, y=islands, col=chr)) +
geom_point() +
facet_wrap(~chr)+
theme_bw(base_size = 20)
both %>%
ggplot(aes(x=full, y=islands, col=chr)) +
geom_point() +
facet_wrap(~chr)+
theme_bw(base_size = 20)+
theme(legend.position = "none")
both %>%
ggplot(aes(x=full, y=islands, col=chr)) +
geom_point() +
geom_abline(intercept=0, slope=1)+
facet_wrap(~chr)+
theme_bw(base_size = 20)+
theme(legend.position = "none")
both %>%
ggplot(aes(x=full, y=islands, col=chr)) +
geom_point() +
geom_abline(slope=1)+
facet_wrap(~chr)+
theme_bw(base_size = 20)+
theme(legend.position = "none")
?geom_abline
both %>%
ggplot(aes(x=full, y=islands, col=chr)) +
geom_point() +
geom_abline(intercept=0, slope=1)+
facet_wrap(~chr)+
theme_bw(base_size = 20)+
theme(legend.position = "none")
